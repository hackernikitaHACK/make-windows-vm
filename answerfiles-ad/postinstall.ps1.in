
Function out-host {
	$str = $args[0]
	Write-Host "$str"
	echo "$str"
}

out-host "==> Start postinstall ..."

$logpath = "C:"
if (Test-Path -Path A:) {
	$logpath = "A:"
}
$postprog = "@ANSF_DRIVE_LETTER@\postinstall.ps1"
$RunOnceKey = "HKLM:\Software\Microsoft\Windows\CurrentVersion\RunOnce"

$stage = $args[0]
if (!$stage) { $stage = "base" }

out-host "==> Start postinstall $stage ..."

switch($stage) {
	"base" {
		# activate windows with the product key
		# no need to activate: ??? 

		# turning off firewall
		out-host "`n==> turning off firewall"
		Set-NetFirewallProfile -Profile Domain,Public,Private -Enabled False

		# enabling remote desktop
		out-host "`n==> enabling remote desktop"
		Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -name "fDenyTSConnections" -Value 0
		#Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
		#Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -name "UserAuthentication" -Value 0

		# saving network connection details
		out-host "`n==> save ipconfig info"
		ipconfig | out-file -encoding utf8 $logpath\@IPCONFIG_LOGF@

		# disabling IE ESC (Internet Explorer Enhanced Security Configuration)
		out-host "`n==> disabling IE ESC (Internet Explorer Enhanced Security Configuration)"
		$AdminKey = "HKLM:\SOFTWARE\Microsoft\Active Setup\Installed Components\{A509B1A7-37EF-4b3f-8CFC-4F3A74704073}"
		$UserKey = "HKLM:\SOFTWARE\Microsoft\Active Setup\Installed Components\{A509B1A8-37EF-4b3f-8CFC-4F3A74704073}"
		Set-ItemProperty -Path $AdminKey -Name "IsInstalled" -Value 0
		Set-ItemProperty -Path $UserKey -Name "IsInstalled" -Value 0
		Stop-Process -Name Explorer
		out-host "`n==> IE Enhanced Security Configuration (ESC) has been disabled."

		# disabling shutdown event tracker/shutdown dialog
		out-host "`n==> disabling shutdown event tracker/dialog"
		reg add "HKLM\SOFTWARE\Policies\Control\Microsoft\Windows NT\Reliability" /v ShutDownReasonOn /t REG_DWORD /d 0 /f
		reg add "HKLM\SOFTWARE\Policies\Control\Microsoft\Windows NT\Reliability" /v ShutDownReasonUI /t REG_DWORD /d 0 /f

		# adding hostname for the virtual host
		out-host "`n==> add host's hostname to $Env:WinDir\system32\drivers\etc\hosts"
		echo "" >> $Env:WinDir\system32\drivers\etc\hosts
		echo "192.168.122.1 @VIRTHOST@" >> $Env:WinDir\system32\drivers\etc\hosts

		# disabling DNS registration on the network interface
		$MacDisable = "@MAC_DISABLE@"
		if ($MacDisable) {
			out-host "`n==> disabling DNS registration on the network interface"
			$Nic=(Get-WmiObject "Win32_NetworkAdapterConfiguration where MACAddress='$MacDisable'")
			$Nic.SetDynamicDNSRegistration($false,$false)
		}

		# installing chocolatey package manager
		out-host "`n==> installing chocolatey package manager"
		iex ((new-object net.webclient).DownloadString('https://chocolatey.org/install.ps1'))
		if ($?) {
			$env:Path+=";%ALLUSERSPROFILE%\chocolatey\bin"
		}
		# installing openssh
		choco install openssh -params '"/SSHServerFeature"' -y

		# Setup AD as Domain Controller
		out-host "`n==> Setup AD as Domain Controller"
		Install-windowsfeature -name AD-Domain-Services -IncludeManagementTools
		$SafePasswd=(convertto-securestring "@ADMINPASSWORD@" -asplaintext -force)
		Install-ADDSForest -DomainName @AD_DOMAIN@ -SafeModeAdministratorPassword $SafePasswd -CreateDNSDelegation:$false -NoDNSOnNetwork:$true -DomainMode @AD_DOMAIN_LEVEL@ -DomainNetBIOSName @NETBIOS_NAME@ -ForestMode @AD_FOREST_LEVEL@ -InstallDNS:$true -NoRebootOnCompletion:$true -Force

		# Reboot to complete Active Directory setup
		out-host "`n==> Reboot to complete Active Directory setup"
		Set-ItemProperty $RunOnceKey "NextRun" "powershell $postprog afterADSetup >> @POST_INSTALL_LOG@ 2>&1"
		shutdown -r -f -t 10 -c "Shutting down in 1 minute: Reboot to complete Active Directory setup"
	}

	"afterADSetup" {
		# do this just after AD has been set up
		out-host "`n==> reset dns ip"
		$DNS_IPS=(Get-WmiObject "Win32_NetworkAdapterConfiguration where MACAddress='@DNS_IF_MAC@'").IPaddress
		dnscmd . /ResetListenAddresses $DNS_IPS

		# Install Standalone Root CA
		out-host "`n==> Install Standalone Root CA"
		Import-Module ServerManager
		Add-WindowsFeature Adcs-Cert-Authority -IncludeManagementTools
		Install-AdcsCertificationAuthority -force -CAType EnterpriseRootCa

		# Reboot to complete Root CA Services setup
		out-host "`n==> Reboot to complete Root CA setup"
		Set-ItemProperty $RunOnceKey "NextRun" "powershell $postprog afterRootCASetup >> @POST_INSTALL_LOG@ 2>&1"
		shutdown -r -f -t 10 -c "Shutting down in 1 minute: Reboot to complete Root CA setup"
	}

	"afterRootCASetup" {
		# Add KDC
		out-host "`n==> Add KDC"
		ksetup.exe /AddKDC @NETBIOS_NAME@ @FQDN@

		# complete
		out-host "`n==> install complete!!!"
		echo "install complete" | out-file -encoding utf8 $logpath\@INSTALL_COMPLETE_FILE@
	}
}
